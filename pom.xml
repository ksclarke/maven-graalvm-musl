<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>maven-graalvm-musl</artifactId>
  <version>${revision}</version>

  <name>A Dockerized Maven builder that compiles binaries for Alpine with GraalVM</name>

  <licenses>
    <license>
      <name>Mozilla Public License 2.0</name>
      <url>https://opensource.org/licenses/MPL-2.0</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:ksclarke/maven-graalvm-musl.git</connection>
    <developerConnection>scm:git:git@github.com:ksclarke/musl-graalvm-musl.git</developerConnection>
    <url>git@github.com:ksclarke/musl-graalvm-musl.git</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ksclarke/maven-graalvm-musl/issues</url>
  </issueManagement>

  <properties>
    <graalvm.version>22.2.0</graalvm.version>
    <maven.version>3.8.6</maven.version>
    <maven.checksum>f790857f3b1f90ae8d16281f902c689e4f136ebe584aba45e4b1fa66c80cba826d3e0e52fdd04ed44b4c66f6d3fe3584a057c26dfcac544a60b301e6d0f91c26</maven.checksum>
    <musl.version>1.2.3</musl.version>
    <libstdc.version>8</libstdc.version>
    <upx.version>3.96</upx.version>

    <!-- Test dependencies -->
    <testcontainers.version>1.17.6</testcontainers.version>

    <!-- Plugin versions -->
    <deploy.plugin.version>3.0.0</deploy.plugin.version>
    <docker.plugin.version>0.40.2</docker.plugin.version>
    <jar.plugin.version>3.3.0</jar.plugin.version>

    <!-- Maven build properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- The Docker registry user and password used for publishing images -->
    <docker.registry.username />
    <docker.registry.password />

    <!-- The Docker registry account, if supplied, must end with a slash (e.g. "account/") -->
    <docker.registry.account />
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Assists with the processing of project tool configurations -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>

      <!-- We're building a Docker image, so skip the jar construction -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${jar.plugin.version}</version>
        <configuration>
          <skipIfEmpty>true</skipIfEmpty>
        </configuration>
      </plugin>

      <!-- Checks dependencies for various issues -->
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>analyze-dep</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <ignoredDependencies>
                <ignoredDependency>org.slf4j:slf4j-simple:jar</ignoredDependency>
                <ignoredDependency>org.jboss.forge.roaster:roaster-jdt:jar</ignoredDependency>
              </ignoredDependencies>
              <ignoredUnusedDeclaredDependencies>
                <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic</ignoredUnusedDeclaredDependency>
              </ignoredUnusedDeclaredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Run tests on our generated image -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <argLine>${jacoco.agent.arg}</argLine>
          <environmentVariables>
            <IMAGE_NAME>${project.artifactId}</IMAGE_NAME>
            <IMAGE_VERSION>${project.version}</IMAGE_VERSION>
            <DOCKER_ACCOUNT>${docker.registry.account}</DOCKER_ACCOUNT>
          </environmentVariables>
        </configuration>
      </plugin>

      <!-- Disable standard deploy; we publish a Docker image, not Jar file -->
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${deploy.plugin.version}</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <!-- A Maven plugin that can build a Docker image -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.plugin.version}</version>
        <configuration>
          <verbose>true</verbose>
          <imagesMap>
            <maven-graalvm-musl>
              <!-- Registry account, if supplied, must end in a slash (e.g. "account/") -->
              <name>${docker.registry.account}${project.artifactId}:%l</name>
              <build>
                <args>
                  <GRAALVM_TAG>${graalvm.version}</GRAALVM_TAG>
                  <MAVEN_CHECKSUM>${maven.checksum}</MAVEN_CHECKSUM>
                  <MAVEN_VERSION>${maven.version}</MAVEN_VERSION>
                  <MUSL_VERSION>${musl.version}</MUSL_VERSION>
                  <LIBSTDC_VERSION>${libstdc.version}</LIBSTDC_VERSION>
                  <UPX_VERSION>${upx.version}</UPX_VERSION>
                </args>
                <dockerFile>${project.basedir}/src/main/docker/Dockerfile</dockerFile>
                <assembly>
                  <descriptorRef>project</descriptorRef>
                  <targetDir>/maven</targetDir>
                </assembly>
              </build>
            </maven-graalvm-musl>
          </imagesMap>
        </configuration>
        <executions>

          <!-- Starts the test container -->
          <execution>
            <id>docker-build</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>

          <!-- Deploys the newly built image -->
          <execution>
            <id>docker-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <parent>
    <artifactId>freelib-parent</artifactId>
    <groupId>info.freelibrary</groupId>
    <version>8.0.0</version>
  </parent>

</project>
